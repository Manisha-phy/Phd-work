// This codes is for counting the tracks passing throgh the detector by using the MC point information

#include<iostream>
//#include "/home/shyam/pandaroot/start/PndStartPoint.h"

void startfluxnew()
{
	Int_t m=0;
	Int_t l=0;
	Int_t q=0;
        Int_t p=0;
        int temp,j;

///////////////////////////////////////////////Reading the root file

	TFile* f = new TFile("../sim_complete.root"); // the sim file you want to analyse
	TTree *t=(TTree *) f->Get("cbmsim") ;
	TClonesArray *start_array=new TClonesArray("PndStartPoint");
	t->SetBranchAddress("STARTPoint",&start_array);//Branch name

	Int_t nEntries =  t->GetEntriesFast();
	for (Int_t j=0; j< nEntries; j++)
	{
		std::vector<Int_t> a, b;	
		t->GetEntry(j);
		cout<<"Event="<<j<<endl;
		//--------------------Start detector Entries--------------------
		for (Int_t k=0; k<start_array->GetEntriesFast(); k++)
		{
			PndStartPoint* startpoint = (PndStartPoint*)start_array->At(k);
			  
			//m++;
			a.push_back(startpoint->GetTrackID());
		}
	       
              //---------------Sorting the array of MC points on Detector for each event----------
                    int n=a.size();
                
                 for(int i=0;i<n;i++)
                        for(int p=0;p<n-i-1;p++){
                       
                         if(a[p]>a[p+1])
                          {
                             temp=a[p];
                             a[p]=a[p+1];
                             a[p+1]=temp;
                          }
                                              }
                 for(int i=0;i<n;i++)
   std::cout<<"Sorted array of MC Track ID="<<a[i]<<std::endl;
                   if(a[i]==a[i+1])
                           m=1;
                         continue;
                     if(a[i]!=a[i+1])
                           l=1;
                      else
                           l++;
//--------------------------matching the track ID and counting the tracks-----
     }        
         //  std::cout<<"Sorted array of MC points="<<a[i]<<std::endl;
        
            // a.clear();
	
std:: cout<<"Total number of tracks hitting the detector="<<l<<std::endl;
}
